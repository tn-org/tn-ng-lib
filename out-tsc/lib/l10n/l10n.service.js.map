{"version":3,"file":"l10n.service.js","sourceRoot":"","sources":["../../../src/l10n/l10n.service.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,sBAAsB,CAAC;AAClD,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAC3C,OAAO,EAAE,eAAe,EAAE,MAAM,MAAM,CAAC;AAKhC,IAAM,WAAW,GAAjB,MAAM,WAAW;IAIF;IAHZ,IAAI,GAAW,IAAI,CAAC;IACpB,WAAW,GAAG,IAAI,eAAe,CAAM,EAAE,CAAC,CAAC;IAEnD,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAClC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACtB,CAAC;IAED,GAAG,CAAC,IAAY;QACd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAqB,IAAI,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,IAAI,EAAE,EAAE;YACjE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,GAAG,CAAC,GAAW,EAAE,SAAc,EAAE;QAC/B,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;QAC1C,OAAO,GAAG,IAAI,UAAU;YACtB,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC;YACnD,CAAC,CAAC,GAAG,CAAC;IACV,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;IACzC,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB,CAAC;IAEO,mBAAmB,CAAC,WAAmB,EAAE,MAAW;QAC1D,MAAM,OAAO,GAAG,CAAC,GAAG,WAAW,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC,CAAC;QACpE,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;QAE7C,IAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YACpD,gCAAgC;YAChC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,MAAM,CAAC;YACzC,WAAW,GAAG,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC;QAC3D,CAAC;aAAM,IAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,MAAM,KAAK,IAAI,EAAE,CAAC;YACzD,WAAW,GAAG,WAAW,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE;gBAClE,MAAM,GAAG,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC;gBACtB,OAAO,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAC1C,CAAC,CAAC,CAAC;QACL,CAAC;QAED,OAAO,WAAW,CAAC;IACrB,CAAC;CACF,CAAA;AA/CY,WAAW;IAHvB,UAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;qCAK0B,UAAU;GAJzB,WAAW,CA+CvB","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class L10nService {\n  private lang: string = 'ja';\n  private dictionary$ = new BehaviorSubject<any>({});\n\n  constructor(private http: HttpClient) {\n    this.use(this.lang);\n  }\n\n  use(lang: string) {\n    this.lang = lang;\n    this.http.get(`/assets/dist/l10n/${lang}.json`).subscribe((dict) => {\n      this.dictionary$.next(dict);\n    });\n  }\n\n  get(key: string, values: any = {}): string {\n    const dictionary = this.dictionary$.value;\n    return key in dictionary\n      ? this.replacePlaceholders(dictionary[key], values)\n      : key;\n  }\n\n  getStream() {\n    return this.dictionary$.asObservable();\n  }\n\n  getLang() {\n    return this.lang;\n  }\n\n  private replacePlaceholders(translation: string, values: any): string {\n    const matches = [...translation.matchAll(/\\{\\{\\s*([^}]+)\\s*\\}\\}/g)];\n    const keys = matches.map((m) => m[1].trim());\n\n    if (typeof values !== 'object' && keys.length === 1) {\n      // プレースホルダ1個だけのとき、stringを直接当てはめる\n      values = this.get('' + values) || values;\n      translation = translation.replace(matches[0][0], values);\n    } else if (typeof values === 'object' && values !== null) {\n      translation = translation.replace(/\\{\\{([^}]+)\\}\\}/g, (match, p1) => {\n        const key = p1.trim();\n        return key in values ? values[key] : '';\n      });\n    }\n\n    return translation;\n  }\n}\n"]}